{"version":3,"sources":["ui/card.js","ui/button.js","ui/word.js","ui/styles.js","ui/header.js","ui/score.js","ui/timer.js","ui/notification.js","logical/game.js","utils/shuffle.js","utils/getWord.js","logical/gameWrap.js","logical/gameDemo.js","logical/draggableCard.js","logical/targetCard.js","logical/timer.js","countdown.js","App.js","serviceWorker.js","index.js"],"names":["Card","React","forwardRef","props","ref","char","opaque","error","success","Div","styled","div","_templateObject","react_default","a","createElement","Btn","button","button_templateObject","Button","onClick","children","Word","word_templateObject","H3","h3","styles_templateObject","P","p","_templateObject2","APP","_templateObject3","Hint","_templateObject4","Header","react","UL","ul","score_templateObject","Score","wins","loses","TimerDOM","timer_templateObject","isCompleted","Timer","_ref","minutes","seconds","notification_templateObject","Notification","message","notification_P","Game","correctWord","word","hint","onError","onCorrectMove","isRunning","_useState","useState","split","map","idx","accepts","index","type","lastDroppedItem","_useState2","Object","slicedToArray","targetCards","setTargetCards","_useState3","draggableCards","_useState5","_useState6","droppedCards","setDroppedCards","_useState7","_useState8","correctDroppedCards","setCorrectDroppedCards","isDropped","find","_card","handleDrop","useCallback","item","update","$push","defineProperty","$set","useEffect","length","ui_word","draggableCard","key","_char","_ref2","targetCard","accept","onDrop","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","getWords","words","alphabits","toLowerCase","diff","join","GameWrap","onSuccess","onGameOver","duration","errorsCount","setErrorsCount","_useState4$","console","log","setMessage","gameWrap_templateObject","logical_timer","onTimerCompleted","header","esm","backend","HTML5Backend","game","remainingChars","notification","GameDemo","_useState2$","useRef","card","DraggableCard","_useDrag","useDrag","collect","monitor","opacity","isDragging","_useDrag2","drag","assign","TargetCard","_useDrop","useDrop","drop","isOver","_useDrop2","TimerComponent","setIsCompleted","_useState4","setSeconds","setMinutes","tempSeconds","setTempSeconds","_useState9","Date","_useState10","startedTime","setStartedTime","sec","min","concat","setTimeout","newSeconds","timer","Countdown","status","setStatus","setWins","setLoses","score","gameDemo","ui_button","gameWrap","App","countdown","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b58fe65.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Card = React.forwardRef((props, ref) => {\n  const { char, opaque, error, success } = props;\n\n  const Div = styled.div`\n    width: 120px;\n    height: 160px;\n    border: 2px solid #000;\n    margin: 0 8px;\n    text-transform: uppercase;\n    line-height: 160px;\n    font-family: Helvetica;\n    font-size: 96px;\n    color: #009680;\n    text-align: center;\n    cursor: move;\n    transition: 0.2s all ease;\n    ${opaque && `opacity: 0.25;`}\n    ${error && `border-color: #FF0000; opacity: 0.42;`}\n    ${success && `border-color: #6CBC36; color: #000;`}\n  `;\n\n  return <Div ref={ref}>{char}</Div>;\n});\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Btn = styled.button`\n  display: block;\n  padding: 15px;\n  border: none;\n  background: #009680;\n  color: #fff;\n  margin: 20px auto;\n  font-size: 16px;\n  text-transform: uppercase;\n  font-weight: 200;\n  letter-spacing: 3px;\n  cursor: pointer;\n  transition: 0.2s all ease;\n  &:hover {\n    background: #000;\n  }\n`;\nconst Button = props => {\n  return <Btn onClick={props.onClick}>{props.children}</Btn>;\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst Word = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\nexport default Word;\n","import styled from \"styled-components\";\nconst H3 = styled.h3`\n  font-family: Helvetica;\n  font-size: 48px;\n  color: #00648f;\n  text-align: center;\n  font-weight: 300;\n  display: block;\n  margin: 0 0 30px;\n`;\nconst P = styled.p`\n  font-family: Helvetica;\n  font-size: 32px;\n  color: #00648f;\n  text-align: center;\n  display: block;\n  margin: 0 0 30px;\n`;\n\nconst APP = styled.div`\n  padding: 30px;\n  font-family: Helvetica;\n`;\n\nconst Hint = styled.p`\n  text-align: center;\n  font-size: 20px;\n  margin: 0 0 30px;\n`;\n\nexport { APP, H3, P, Hint };\n","import React, { Fragment } from \"react\";\nimport { H3, P } from \"./styles\";\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <H3>Create the word by dragging letters into the empty boxes</H3>\n      <P>You have one minute</P>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst UL = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  padding: 0;\n  li {\n    margin: 10px;\n  }\n`;\nconst Score = props => {\n  const { wins, loses } = props;\n\n  return (\n    <UL>\n      <li>\n        <strong>Win:</strong> {wins}\n      </li>\n      <li>\n        <strong>Loses:</strong> {loses}\n      </li>\n    </UL>\n  );\n};\n\nexport default Score;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst TimerDOM = styled.div`\n  opacity: 0.5;\n  font-family: Helvetica;\n  font-size: 48px;\n  color: #00648f;\n  text-align: center;\n  transition: 0.2s all ease;\n  margin: 0 0 30px;\n  ${props => (props.isCompleted ? `color: #FF0000;` : \"\")}\n`;\nconst Timer = ({ minutes, seconds, isCompleted }) => {\n  return (\n    <TimerDOM isCompleted={isCompleted}>\n      {minutes}:{seconds}\n    </TimerDOM>\n  );\n};\n\nexport default Timer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst P = styled.p`\n  padding: 10px;\n  background: #eee;\n  display: table;\n  margin: auto;\n  ${props => props.error && `color: #F00; background:#FFEBEE`}\n  ${props => props.success && `color: #6CBC36; background:#E8F5E9`}\n`;\nconst Notification = ({ message, error, success }) => {\n  return (\n    <P error={error} success={success}>\n      {message}\n    </P>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport update from \"immutability-helper\";\nimport { TargetCard, DraggableCard } from \"./index\";\nimport { Word } from \"../ui\";\nimport { Hint } from \"../ui/styles\";\n\nconst Game = props => {\n  const { correctWord, word, hint, onError, onCorrectMove, isRunning } = props;\n  const [targetCards, setTargetCards] = useState(\n    correctWord.split(\"\").map((char, idx) => ({\n      accepts: { char, index: idx, type: \"char\" },\n      lastDroppedItem: null\n    }))\n  );\n  const [draggableCards] = useState(\n    word.split(\"\").map((char, idx) => ({ char, index: idx, type: \"char\" }))\n  );\n  const [droppedCards, setDroppedCards] = useState([]);\n  const [correctDroppedCards, setCorrectDroppedCards] = useState([]);\n  function isDropped(char, index) {\n    return !!correctDroppedCards.find(\n      _card => _card.char === char && _card.index === index\n    );\n  }\n\n  const handleDrop = useCallback(\n    (idx, item) => {\n      const { char } = item;\n      const correctChar = correctWord.split(\"\")[idx];\n\n      if (correctChar === char) {\n        setDroppedCards(\n          update(droppedCards, char ? { $push: [item] } : { $push: [] })\n        );\n        setCorrectDroppedCards(\n          update(correctDroppedCards, char ? { $push: [item] } : { $push: [] })\n        );\n        setTargetCards(\n          update(targetCards, {\n            [idx]: {\n              lastDroppedItem: {\n                $set: item\n              }\n            }\n          })\n        );\n      } else {\n        setDroppedCards(\n          update(droppedCards, char ? { $push: [item] } : { $push: [] })\n        );\n        onError();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [droppedCards, correctDroppedCards, targetCards]\n  );\n\n  useEffect(() => {\n    if (correctDroppedCards.length > 0) {\n      onCorrectMove(correctWord.length - correctDroppedCards.length);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [correctDroppedCards]);\n\n  return (\n    <div>\n      <Word>\n        {draggableCards.map(({ char }, index) => (\n          <DraggableCard\n            char={char}\n            index={index}\n            isDropped={isDropped(char, index)}\n            key={index}\n            isRunning={isRunning}\n            error={\n              !!droppedCards.find(\n                _char => _char.char === char && _char.index === index\n              ) &&\n              !correctDroppedCards.find(\n                _char => _char.char === char && _char.index === index\n              )\n            }\n          />\n        ))}\n      </Word>\n      <Hint>\n        <strong>Hint: </strong>\n        {hint}\n      </Hint>\n      <Word>\n        {targetCards.map(({ accepts, lastDroppedItem }, index) => (\n          <TargetCard\n            accept={accepts}\n            lastDroppedItem={lastDroppedItem}\n            onDrop={item => handleDrop(index, item)}\n            key={index}\n          />\n        ))}\n      </Word>\n    </div>\n  );\n};\nexport default Game;\n","const shuffle = array => {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\nexport default shuffle;\n","import shuffle from \"./shuffle\";\n\nconst getWords = () => {\n  const words = [\n    \"Ankra\",\n    \"Cairo\",\n    \"Dubai\",\n    \"Berlin\",\n    \"Paris\",\n    \"London\",\n    \"Madrid\",\n    \"Rome\",\n    \"New York\",\n    \"Tokyo\",\n    \"Jeddah\",\n    \"Mekka\"\n  ];\n  const alphabits = \"qwertyuiopasdfghjklzxcvbnm\".split(\"\");\n  const correctWord = words[\n    Math.floor(Math.random() * words.length)\n  ].toLowerCase();\n  let word = correctWord;\n  if (correctWord.length < 9) {\n    const diff = 9 - correctWord.length;\n    for (let index = 0; index < diff; index++) {\n      word += alphabits[Math.floor(Math.random() * alphabits.length)];\n    }\n  }\n\n  word = shuffle(word.split(\"\")).join(\"\");\n  const hint = \"It's a famous city\";\n  return { word, correctWord, hint };\n};\nexport default getWords;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport styled from \"styled-components\";\nimport getWords from \"../utils/getWord\";\nimport { Game, Timer } from \"./index\";\nimport { Header, Notification } from \"../ui\";\n\nconst GameWrap = props => {\n  const { isRunning, onSuccess, onGameOver, duration } = props;\n  const [errorsCount, setErrorsCount] = useState(3);\n  const [{ word, correctWord, hint }] = useState(getWords());\n  console.log(\"word\", word);\n  console.log(\"correctWord\", correctWord);\n\n  const [message, setMessage] = useState({\n    message: (\n      <span>\n        Wow, start dragging your first card. Choose your moves wisely as you\n        have only <strong>3</strong> trials\n      </span>\n    ),\n    error: false\n  });\n  useEffect(() => {\n    if (errorsCount === 0) {\n      onGameOver();\n      setMessage({\n        message: `Game Over!`,\n        error: true,\n        success: false\n      });\n    } else if (errorsCount < 3) {\n      setMessage({\n        message: (\n          <span>\n            Ops, Wrong choice!! Choose your moves wisely. You only have{\" \"}\n            <strong>{errorsCount}</strong> trials left.\n          </span>\n        ),\n        error: true,\n        success: false\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [errorsCount]);\n\n  const Message = styled.p`\n    padding: 10px;\n    background: #eee;\n    display: table;\n    margin: auto;\n    ${message.error && \"color: #F00; background:#E57373 \"}\n    ${message.success && \"color: #6CBC36; background: #81C784;\"}\n  `;\n  return (\n    <Fragment>\n      <Timer\n        seconds={duration}\n        isRunning={isRunning}\n        onTimerCompleted={() => {\n          onGameOver();\n          setMessage({\n            message: `Timeout, Game Over!`,\n            error: true,\n            success: false\n          });\n        }}\n      />\n      <Header />\n      <DndProvider backend={HTML5Backend}>\n        <Game\n          word={word}\n          correctWord={correctWord}\n          hint={hint}\n          isRunning={isRunning}\n          onCorrectMove={remainingChars => {\n            if (remainingChars === 0) {\n              onSuccess();\n              setMessage({\n                message: <span>Nice guess, congratulations</span>,\n                error: false,\n                success: true\n              });\n            } else if (remainingChars === 1) {\n              setMessage({\n                message: (\n                  <span>\n                    Great, <strong>last character</strong>. Almost there...\n                  </span>\n                ),\n                error: false,\n                success: false\n              });\n            } else {\n              setMessage({\n                message: (\n                  <span>\n                    Great, Only <strong>{remainingChars}</strong> characters\n                    remaining\n                  </span>\n                ),\n                error: false,\n                success: false\n              });\n            }\n          }}\n          onError={() => {\n            setErrorsCount(errorsCount - 1);\n          }}\n        />\n        {<Notification {...message} />}\n      </DndProvider>\n    </Fragment>\n  );\n};\nexport default GameWrap;\n","import React, { useState, useRef } from \"react\";\nimport { Word, Card, Header } from \"../ui\";\nimport getWords from \"../utils/getWord\";\nimport { Timer } from \"./index\";\n\nconst GameDemo = props => {\n  const { duration } = props;\n  const [{ word, correctWord }] = useState(getWords());\n  const ref = useRef();\n  return (\n    <div>\n      <Timer seconds={duration} isRunning={false} />\n      <Header />\n      <Word>\n        {word.split(\"\").map((char, index) => (\n          <Card ref={ref} char={null} key={index} />\n        ))}\n      </Word>\n      <Word>\n        {correctWord.split(\"\").map((char, index) => (\n          <Card ref={ref} char={null} key={index} />\n        ))}\n      </Word>\n    </div>\n  );\n};\nexport default GameDemo;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { Card } from \"../ui\";\n\nconst DraggableCard = props => {\n  const { isDropped, char, index, error } = props;\n  const [{ opaque }, drag] = useDrag({\n    item: { char, index, type: \"char\" },\n    collect: monitor => ({\n      opacity: monitor.isDragging()\n    })\n  });\n  return (\n    <Card\n      ref={isDropped ? null : drag}\n      {...props}\n      char={char}\n      error={error}\n      opaque={opaque || isDropped}\n    />\n  );\n};\nexport default DraggableCard;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { Card } from \"../ui\";\n\nconst TargetCard = props => {\n  const { onDrop, lastDroppedItem } = props;\n  const [{ isOver }, drop] = useDrop({\n    accept: \"char\",\n    drop: onDrop,\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  });\n\n  return (\n    <Card\n      ref={lastDroppedItem ? null : drop}\n      char={lastDroppedItem ? lastDroppedItem.char : null}\n      success={!!lastDroppedItem}\n      {...props}\n      opaque={isOver}\n    />\n  );\n};\nexport default TargetCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Timer } from \"../ui\";\n\nconst TimerComponent = props => {\n  const { onTimerCompleted, isRunning } = props;\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [seconds, setSeconds] = useState(\"00\");\n  const [minutes, setMinutes] = useState(\"00\");\n  const [tempSeconds, setTempSeconds] = useState(props.seconds * 1000);\n  const [startedTime, setStartedTime] = useState(new Date());\n\n  useEffect(() => {\n    const sec = props.seconds % 60;\n    const min = Math.floor(props.seconds / 60);\n    setSeconds(sec < 10 ? `0${sec}` : `${sec}`);\n    setMinutes(min < 10 ? `0${min}` : `${min}`);\n    setStartedTime(new Date());\n  }, [props.seconds]);\n\n  const doTheTimer = () => {\n    setTimeout(() => {\n      const newSeconds = props.seconds * 1000 - (new Date() - startedTime);\n      if (newSeconds >= 0 && newSeconds < tempSeconds) {\n        if (Math.floor(newSeconds / 1000) === 0) {\n          setIsCompleted(true);\n          onTimerCompleted();\n        }\n        setTempSeconds(newSeconds);\n        const sec = Math.floor(newSeconds / 1000) % 60;\n        const min = Math.floor(Math.floor(newSeconds / 1000) / 60);\n        setSeconds(sec < 10 ? `0${sec}` : `${sec}`);\n        setMinutes(min < 10 ? `0${min}` : `${min}`);\n      }\n    }, 50);\n  };\n  useEffect(() => {\n    if (isRunning) {\n      doTheTimer();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tempSeconds, isRunning]);\n\n  return (\n    <Timer minutes={minutes} seconds={seconds} isCompleted={isCompleted} />\n  );\n};\n\nexport default TimerComponent;\n","import React, { useState, Fragment } from \"react\";\n\nimport { GameWrap, GameDemo } from \"./logical/\";\nimport { Button, Score } from \"./ui\";\nimport { APP } from \"./ui/styles\";\n\nconst Countdown = props => {\n  const { duration } = props;\n  const [status, setStatus] = useState(\"notStarted\");\n  const [wins, setWins] = useState(0);\n  const [loses, setLoses] = useState(0);\n\n  // gameStatus: notStarted, running, solved, gameOver\n\n  const gameOver = () => {\n    setStatus(\"gameOver\");\n    setLoses(loses + 1);\n  };\n  const gameSolved = () => {\n    setStatus(\"solved\");\n    setWins(wins + 1);\n  };\n\n  return (\n    <APP>\n      <Score wins={wins} loses={loses} />\n      {status === \"notStarted\" ? (\n        <Fragment>\n          <GameDemo duration={duration} />\n          <Button onClick={() => setStatus(\"running\")}>Start Game</Button>\n        </Fragment>\n      ) : (\n        <GameWrap\n          isRunning={status === \"running\"}\n          onSuccess={gameSolved}\n          onGameOver={gameOver}\n          duration={duration}\n        />\n      )}\n      {(status === \"gameOver\" || status === \"solved\") && (\n        <Button onClick={() => setStatus(\"notStarted\")}>Reset Game</Button>\n      )}\n    </APP>\n  );\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport Countdown from \"./countdown\";\n\nfunction App() {\n  return <Countdown duration={120} />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}